(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{VvpV:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return a})),n.d(t,"default",(function(){return u}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("q1tI");var i=n("7ljp"),o=n("013z");n("qKvR");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}var a={},c=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(i.b)("div",t)}},s=c("InlineNotification"),b=c("AnchorLinks"),l=c("AnchorLink"),p=c("PageDescription"),m={_frontmatter:a},h=o.a;function u(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(i.b)(h,r({},m,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)(s,{kind:"warning",mdxType:"InlineNotification"},"UNDER CONSTRUCTION"),Object(i.b)(b,{mdxType:"AnchorLinks"},Object(i.b)(l,{mdxType:"AnchorLink"},"Overview"),Object(i.b)(l,{mdxType:"AnchorLink"},"Build"),Object(i.b)(l,{mdxType:"AnchorLink"},"Run"),Object(i.b)(l,{mdxType:"AnchorLink"},"Integration Tests"),Object(i.b)(l,{mdxType:"AnchorLink"},"Implementation Details")),Object(i.b)("h3",null,"TBD"),Object(i.b)("p",null,"To be sourced from"),Object(i.b)("h2",null,"Overview"),Object(i.b)(p,{mdxType:"PageDescription"},"This service keeps track of each scheduled, current or completed voyage of container carreer vessels, being loaded with containers at a source port, sailing to a destination port and having onboard containers unloaded there."),Object(i.b)("p",null,"The source repository can be found at ",Object(i.b)("a",r({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc-ms/tree/master/voyages-ms"}),"https://github.com/ibm-cloud-architecture/refarch-kc-ms/tree/master/voyages-ms"),"."),Object(i.b)("h2",null,"User stories"),Object(i.b)("p",null,"This service keeps track of each of the container ships available for transporting containers. Each ship has a unique shipID. We limit the scope of a minimum viable product so the following user stories are implemented:"),Object(i.b)("ul",{className:"contains-task-list"},Object(i.b)("li",r({parentName:"ul"},{className:"task-list-item"}),Object(i.b)("input",r({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","The information about each ship is kept in a json file for a fleet. Ships are uniquely identified by their name (as shipID)."),Object(i.b)("li",r({parentName:"ul"},{className:"task-list-item"}),Object(i.b)("input",r({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","The capacity of a ship is represented by a matrix, number of rows x number of columns to make it simpler. Therefore the total number of container is rows*columns."),Object(i.b)("li",r({parentName:"ul"},{className:"task-list-item"}),Object(i.b)("input",r({parentName:"li"},{type:"checkbox",checked:!0,disabled:!0}))," ","Support GPS lat/log position reports, as ship position event, of the position of the ship a different point in time. This is modeled as csv file with one row of (lat,log) pair, a row representing a time stamp. (1h?)"),Object(i.b)("li",r({parentName:"ul"},{className:"task-list-item"}),Object(i.b)("input",r({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Generate ship event when leaving source port and when entering destination port, and when docked."),Object(i.b)("li",r({parentName:"ul"},{className:"task-list-item"}),Object(i.b)("input",r({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ","Define query of what happen to a ship from a given time to retrace its past voyages.")),Object(i.b)("h2",null,"Build"),Object(i.b)("p",null,"TBD Appsody"),Object(i.b)("h2",null,"Run"),Object(i.b)("p",null,"TBD Appsody"),Object(i.b)("h2",null,"Integration Tests"),Object(i.b)("p",null,"TBD Source from ",Object(i.b)("a",r({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc-ms/blob/master/docs/voyagesms.md"}),"https://github.com/ibm-cloud-architecture/refarch-kc-ms/blob/master/docs/voyagesms.md")),Object(i.b)("h2",null,"Implementation Details"),Object(i.b)("p",null,"TBD Source from ",Object(i.b)("a",r({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc-ms/blob/master/docs/index.md"}),"https://github.com/ibm-cloud-architecture/refarch-kc-ms/blob/master/docs/index.md")))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-microservices-voyages-index-mdx-5a94ff0c4c4689064a42.js.map