(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{"9BDt":function(e,r,t){"use strict";t.r(r),t.d(r,"_frontmatter",(function(){return n})),t.d(r,"default",(function(){return p}));t("91GP"),t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("q1tI");var c=t("7ljp"),o=t("013z");t("qKvR");function b(){return(b=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var c in t)Object.prototype.hasOwnProperty.call(t,c)&&(e[c]=t[c])}return e}).apply(this,arguments)}var n={},l={_frontmatter:n},a=o.a;function p(e){var r=e.components,t=function(e,r){if(null==e)return{};var t,c,o={},b=Object.keys(e);for(c=0;c<b.length;c++)t=b[c],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,["components"]);return Object(c.b)(a,b({},l,t,{components:r,mdxType:"MDXLayout"}),Object(c.b)("p",null,"To build and run the solution locally using docker, please follow the below instructions."),Object(c.b)("h2",null,"Get the app"),Object(c.b)("p",null,"git clone ",Object(c.b)("a",b({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc.git"}),"https://github.com/ibm-cloud-architecture/refarch-kc.git")),Object(c.b)("p",null,"cd refarch-kc/"),Object(c.b)("p",null,"./scripts/clone.sh"),Object(c.b)("h2",null,"Setting up Kafka and Zookeeper"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Deploying Kafka and Zookeeper on Docker")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),"$ cd docker && docker-compose -f backbone-compose.yml up -d >& backend.logs\n\n$ ./scripts/createLocalTopics.sh\n")),Object(c.b)("h2",null,"Fleet ms"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Go to the repo")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),"$ cd refarch-kc-ms/fleet-ms\n")),Object(c.b)("ol",{start:2},Object(c.b)("li",{parentName:"ol"},"Build the image")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),"$ ./scripts/buildDocker.sh\n")),Object(c.b)("ol",{start:3},Object(c.b)("li",{parentName:"ol"},"Deploy on docker")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),'$ docker run -it --name fleetms -e KAFKA_BROKERS="<your_kafka_brokers>" -e KAFKA_ENV="<LOCAL or IBMCLOUD or ICP>" -d -p 9080:9080 -p 9444:9443 ibmcase/kc-fleetms\n')),Object(c.b)("h2",null,"Voyage ms"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Go to the repo")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),"$ cd refarch-kc-ms/voyages-ms\n")),Object(c.b)("ol",{start:2},Object(c.b)("li",{parentName:"ol"},"Build the image")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),"$ ./scripts/buildDocker.sh\n")),Object(c.b)("ol",{start:3},Object(c.b)("li",{parentName:"ol"},"Deploy on docker")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),'$ docker run -it --name voyages -e KAFKA_BROKERS="<your_kafka_brokers>" -e KAFKA_ENV="<LOCAL or IBMCLOUD or ICP>" -e KAFKA_APIKEY="<your_kafka_api_key>" -d -p 3100:3000 ibmcase/kc-voyagesms\n')),Object(c.b)("h2",null,"Order command ms"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Go to the repo")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),"$ cd refarch-kc-order-ms/order-command-ms\n")),Object(c.b)("ol",{start:2},Object(c.b)("li",{parentName:"ol"},"Build the image")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),"$ ./scripts/buildDocker.sh\n")),Object(c.b)("ol",{start:3},Object(c.b)("li",{parentName:"ol"},"Deploy on docker")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),'$ docker run -it --name ordercmd -e KAFKA_BROKERS="<your_kafka_brokers>" -e KAFKA_ENV="<LOCAL or IBMCLOUD or ICP>" -e KAFKA_APIKEY="<your_kafka_api_key>" -d -p 10080:9080 ibmcase/kc-ordercommandms\n')),Object(c.b)("h2",null,"Order query ms"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Go to the repo")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),"$ cd refarch-kc-order-ms/order-query-ms\n")),Object(c.b)("ol",{start:2},Object(c.b)("li",{parentName:"ol"},"Build the image")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),"$ ./scripts/buildDocker.sh\n")),Object(c.b)("ol",{start:3},Object(c.b)("li",{parentName:"ol"},"Deploy on docker")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),'$ docker run -it --name orderquery -e KAFKA_BROKERS="<your_kafka_brokers>" -e KAFKA_ENV="<LOCAL or IBMCLOUD or ICP>" -e KAFKA_APIKEY="<your_kafka_api_key>" -d -p 11080:9080 ibmcase/kc-orderqueryms\n')),Object(c.b)("h2",null,"Container ms"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Go to the repo")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),"cd refarch-kc-container-ms/SpringContainerMS\n")),Object(c.b)("ol",{start:2},Object(c.b)("li",{parentName:"ol"},"Build the image")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),"$ ./scripts/buildDocker.sh\n")),Object(c.b)("ol",{start:3},Object(c.b)("li",{parentName:"ol"},"Deploy on docker")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),'docker run --name springcontainerms \\\n--network docker_default \\\n  -e KAFKA_ENV=$KAFKA_ENV \\\n  -e KAFKA_BROKERS=$KAFKA_BROKERS \\\n  -e KAFKA_APIKEY=$KAFKA_APIKEY \\\n  -e POSTGRESQL_URL=$POSTGRESQL_URL \\\n  -e POSTGRESQL_CA_PEM="$POSTGRESQL_CA_PEM" \\\n  -e POSTGRESQL_USER=$POSTGRESQL_USER \\\n  -e POSTGRESQL_PWD=$POSTGRESQL_PWD \\\n  -e TRUSTSTORE_PWD=${TRUSTSTORE_PWD} \\\n  -p 8080:8080 -ti  ibmcase/kc-springcontainerms\n')),Object(c.b)("h2",null,"Web"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"Go to the repo")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),"cd refarch-kc-ui/\n")),Object(c.b)("ol",{start:2},Object(c.b)("li",{parentName:"ol"},"Build the image")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),"$ ./scripts/buildDocker.sh\n")),Object(c.b)("ol",{start:3},Object(c.b)("li",{parentName:"ol"},"Deploy on docker")),Object(c.b)("pre",null,Object(c.b)("code",b({parentName:"pre"},{}),'docker run -it --name kcsolution -e KAFKA_BROKERS="<your_kafka_brokers>" -e FLEET_MS_URL="<fleetms_url" ORDER_MS_URL="<orderms_url>" VOYAGE_MS_URL="<voyagems_url>" --link fleetms:fleetms --link voyages:voyages --link ordercmd:ordercmd --link orderquery:orderquery --link springcontainerms:springcontainerms -d -p 3110:3010 ibmcase/kc-ui\n')))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-deployments-docker-mdx-a2b147ea8ae8b41f6c93.js.map