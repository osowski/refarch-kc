{"version":3,"sources":["webpack:///./src/pages/microservices/container-management/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","InlineNotification","AnchorLinks","AnchorLink","PageDescription","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","kind","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAqBL,EAAc,sBACnCM,EAAcN,EAAc,eAC5BO,EAAaP,EAAc,cAC3BQ,EAAkBR,EAAc,mBAChCS,EAAc,CAClBV,gBAEIW,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGX,E,oIACF,mBACD,OAAO,YAACQ,EAAD,KAAeD,EAAiBP,EAAhC,CAAuCW,WAAYA,EAAYC,QAAQ,cAG5E,YAACT,EAAD,CAAoBU,KAAK,UAAUD,QAAQ,sBAA3C,sBACA,YAACR,EAAD,CAAaQ,QAAQ,eACvB,YAACP,EAAD,CAAYO,QAAQ,cAApB,YACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,SACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,OACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,qBACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,2BAEE,kCACA,YAACN,EAAD,CAAiBM,QAAQ,mBAAzB,4QAGA,8DAA6C,mBAAGE,WAAW,KAAQ,CAC/D,KAAQ,sEADiC,qEAA7C,KAGA,8LACA,2KAA0J,mBAAGA,WAAW,KAAQ,CAC5K,KAAQ,8EAD8I,mBAA1J,iIAGA,+MACA,gOAA+M,mBAAGA,WAAW,KAAQ,CACjO,KAAQ,uBADmM,8BAA/M,kDAE0F,mBAAGA,WAAW,KAAQ,CAC5G,KAAQ,gEAD8E,SAG1F,+BACA,oCACA,6BACA,oCACA,2CACA,wCAAuB,mBAAGA,WAAW,KAAQ,CACzC,KAAQ,uGADW,sGAAvB,6BAGA,gDACA,mCACA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,4GADQ,4GAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,gGADQ,kGAQ1BJ,EAAWK,gBAAiB","file":"component---src-pages-microservices-container-management-index-mdx-457fa1df70d63115e987.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/refarch-kc/refarch-kc/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">UNDER CONSTRUCTION</InlineNotification>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Overview</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Build</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Run</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Integration Tests</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Implementation Details</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Overview`}</h2>\n    <PageDescription mdxType=\"PageDescription\">\nThis project is part of the container shipment implementation solution, and address the Reefer container management microservice implmentaiton. You can read more about the end to end solution [in this chapter.](https://ibm-cloud-architecture.github.io/refarch-kc/)\n    </PageDescription>\n    <p>{`The source repository can be found at `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ibm-cloud-architecture/refarch-kc-container-ms\"\n      }}>{`https://github.com/ibm-cloud-architecture/refarch-kc-container-ms`}</a>{`.`}</p>\n    <p>{`The goal of this Container management service is to support the reefer containers inventory management and to process all the events related to the container entity.`}</p>\n    <p>{`We are demonstrating in this project how to transform an event storming analysis to an event-driven microservice implementation and how to address `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/cloud/garage/practices/run/reversibility-in-the-cloud\"\n      }}>{`‘reversibility’`}</a>{` between the different platform. The service is packaged via dockerfile, and helm release is defined to deploy to kubernetes.`}</p>\n    <p>{`In distributed systems, it is common to find mechanisms for retrying calls to other, potentially external, services and fail gracefully if that service is unavailable for any reason.`}</p>\n    <p>{`You can read more about using non-blocking request reprocessing and dead letter queues (DLQ) to achieve decoupled, observable error-handling without disrupting real-time traffic in the context of the `}<a parentName=\"p\" {...{\n        \"href\": \"#container-anomaly\"\n      }}>{`Container Anomaly Use Case`}</a>{` of our Reefer Container Reference Application `}<a parentName=\"p\" {...{\n        \"href\": \"https://ibm-cloud-architecture.github.io/refarch-kc/dlq/dlq\"\n      }}>{`here`}</a></p>\n    <h2>{`Build`}</h2>\n    <p>{`TBD Appsody`}</p>\n    <h2>{`Run`}</h2>\n    <p>{`TBD Appsody`}</p>\n    <h2>{`Integration Tests`}</h2>\n    <p>{`TBD Source from `}<a parentName=\"p\" {...{\n        \"href\": \"https://ibm-cloud-architecture.github.io/refarch-kc-container-ms/springboot/#the-integration-tests\"\n      }}>{`https://ibm-cloud-architecture.github.io/refarch-kc-container-ms/springboot/#the-integration-tests`}</a>{` with what is up to date.`}</p>\n    <h2>{`Implementation Details`}</h2>\n    <p>{`TBD Merge:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ibm-cloud-architecture/refarch-kc-container-ms/blob/master/docs/springboot/README.md\"\n        }}>{`https://github.com/ibm-cloud-architecture/refarch-kc-container-ms/blob/master/docs/springboot/README.md`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ibm-cloud-architecture/refarch-kc-container-ms/blob/master/docs/index.md\"\n        }}>{`https://github.com/ibm-cloud-architecture/refarch-kc-container-ms/blob/master/docs/index.md`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}