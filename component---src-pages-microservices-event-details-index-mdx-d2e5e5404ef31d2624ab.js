(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{"6b1y":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return o})),n.d(t,"default",(function(){return u}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("q1tI");var a=n("7ljp"),r=n("013z");n("qKvR");function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var o={},l=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(a.b)("div",t)}},i=l("PageDescription"),b=l("AnchorLinks"),s=l("AnchorLink"),p={_frontmatter:o},m=r.a;function u(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(m,c({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)(i,{mdxType:"PageDescription"},"This section details all of the events being used in the Reefer Container Shipment reference implementation and the relationship of each event to the application's microservices."),Object(a.b)(b,{small:!0,mdxType:"AnchorLinks"},Object(a.b)(s,{mdxType:"AnchorLink"},"Order Command Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Order Created Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Order Updated Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Order Spoilt Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Order Reject Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Order Cancel Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Error Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Container Added Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Container Assigned Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Container Allocated Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Container Not Found Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Container Telemetry Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Container Anomaly Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Container Anomaly Retry Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Container Anomaly Dead Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Container On Maintenance Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Container Off Maintenance Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Voyage Assigned Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Voyage Not Found Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Container Metric Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Ship Position Event"),Object(a.b)(s,{mdxType:"AnchorLink"},"Bluewater Problem Event")),Object(a.b)("h2",null,"Order Command Event"),Object(a.b)("p",null,"Description: These events are produced as a result of user interaction through the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/microservices/user-interface/"}),"User Interface"),". These events will command the creation, update or cancellation of a shipping order. In EDA space, a command is an action demanded or triggered by an actor. These events are of important relevance in the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/consume-transform-produce/"}),"Consume-transform-produce loop")," pattern."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#order-commands-topic"}),"Order Commands Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/consume-transform-produce/"}),"Consume-transform-produce loop"))),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/order/orderCommandEvent.avsc"}),"Order Command Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "payload": {\n    "customerID": "FishFarm",\n    "destinationAddress": {\n      "city": "Oakland",\n      "country": "USA",\n      "state": "CA",\n      "street": "100 Main street",\n      "zipcode": "95053"\n    },\n    "expectedDeliveryDate": "2019-03-31T13:30Z",\n    "orderID": "85eb9236-ed11-4ba5-b4ec-055cb261ae6d",\n    "pickupAddress": {\n      "city": "Shanghai",\n      "country": "China",\n      "state": "NE",\n      "street": "1 a new street",\n      "zipcode": "090"\n    },\n    "pickupDate": "2019-01-25T13:30Z",\n    "productID": "Fish",\n    "quantity": 100,\n    "status": "toBeCreated"\n  },\n  "timestampMillis": 1588010525662,\n  "type": "CreateOrderCommand",\n  "version": "1"\n}\n')),Object(a.b)("h2",null,"Order Created Event"),Object(a.b)("p",null,"Description: These events are produced as a result of a new shipping order being created. These events are emitted in order to inform any other component of the overall Reefer Container Shipment solution such as the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/microservices/container-management/"}),"Containers")," and ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/microservices/voyages/"}),"Voyage")," components, that are part of the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern")," pattern to find a container and a voyage to get allocated and assigned, or the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/microservices/order-query/"}),"Order Query")," component, that will track the status of the orders and containers for the query part of the Command Query Responsibility Segregation (CQRS) pattern for the overall solution."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#orders-topic"}),"Order Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-query/"}),"Order Query")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/voyages/"}),"Voyage"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern")),Object(a.b)("li",{parentName:"ul"},"Command Query Responsibility Segregation (CQRS)")),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/order/orderCreatedEvent.avsc"}),"Order Created Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "payload": {\n    "customerID": "FishFarm",\n    "destinationAddress": {\n      "city": "Oakland",\n      "country": "USA",\n      "state": "CA",\n      "street": "100 Main street",\n      "zipcode": "95053"\n    },\n    "expectedDeliveryDate": "2019-03-31T13:30Z",\n    "orderID": "85eb9236-ed11-4ba5-b4ec-055cb261ae6d",\n    "pickupAddress": {\n      "city": "Shanghai",\n      "country": "China",\n      "state": "NE",\n      "street": "1 a new street",\n      "zipcode": "090"\n    },\n    "pickupDate": "2019-01-25T13:30Z",\n    "productID": "Fish",\n    "quantity": 100,\n    "status": "pending"\n  },\n  "timestampMillis": 1588010525896,\n  "type": "OrderCreated",\n  "version": "1"\n}\n')),Object(a.b)("h2",null,"Order Updated Event"),Object(a.b)("p",null,"Description: These events are produced as a result of a shipping order being updated. These events are emitted in order to inform any other component of the overall Reefer Container Shipment solution such as the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/microservices/container-management/"}),"Containers")," and ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/microservices/voyages/"}),"Voyage")," components, that are part of the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern")," pattern to find a container and a voyage to get allocated and assigned, or the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/microservices/order-query/"}),"Order Query")," component, that will track the status of the orders and containers for the query part of the Command Query Responsibility Segregation (CQRS) pattern for the overall solution."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#orders-topic"}),"Order Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-query/"}),"Order Query")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/voyages/"}),"Voyage"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern")),Object(a.b)("li",{parentName:"ul"},"Command Query Responsibility Segregation (CQRS)")),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/order/orderUpdatedEvent.avsc"}),"Order Updated Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "payload": {\n    "customerID": "FishFarm",\n    "destinationAddress": {\n      "city": "Oakland",\n      "country": "USA",\n      "state": "CA",\n      "street": "100 Main street",\n      "zipcode": "95053"\n    },\n    "expectedDeliveryDate": "2019-03-31T13:30Z",\n    "orderID": "85eb9236-ed11-4ba5-b4ec-055cb261ae6d",\n    "pickupAddress": {\n      "city": "Shanghai",\n      "country": "China",\n      "state": "NE",\n      "street": "1 a new street",\n      "zipcode": "090"\n    },\n    "pickupDate": "2019-01-25T13:30Z",\n    "productID": "Fish",\n    "quantity": 100,\n    "status": "pending"\n  },\n  "timestampMillis": 1588010525896,\n  "type": "OrderUpdated",\n  "version": "1"\n}\n')),Object(a.b)("h2",null,"Order Spoilt Event"),Object(a.b)("p",null,"Description: These events denote that a container, which is carrying fresh goods from a source port to a destination port, has spoilt these fresh goods due to an anomaly detected by one or more of its IOT sensors."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#orders-topic"}),"Order Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-query/"}),"Order Query"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/container-anomaly/"}),"Anomalous Container Tracking")),Object(a.b)("li",{parentName:"ul"},"Command Query Responsibility Segregation (CQRS)")),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/order/orderSpoiltEvent.avsc"}),"Order Spoilt Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "orderID": "85eb9236-ed11-4ba5-b4ec-055cb261ae6d",\n  "payload": {\n    "containerID": "8919",\n    "orderID": "85eb9236-ed11-4ba5-b4ec-055cb261ae6d"\n  },\n  "timestamp": 1588010710172,\n  "type": "OrderSpoilt"\n}\n')),Object(a.b)("h2",null,"Order Reject Event"),Object(a.b)("p",null,"Description: These events are produced as a result of receiving a ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/microservices/event-details/#container-not-found-event"}),"Container Not Found Event")," or ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/microservices/event-details/#voyage-not-found-event"}),"Voyage Not Found Event")," as part of the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern")," pattern and will trigger a compensation process for the components in that ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern")," pattern."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#orders-topic"}),"Order Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/voyages/"}),"Voyages")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-query/"}),"Order Query"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern")),Object(a.b)("li",{parentName:"ul"},"Command Query Responsibility Segregation (CQRS)")),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/order/orderRejectEvent.avsc"}),"Order Reject Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "payload": {\n    "customerID": "FishFarm",\n    "destinationAddress": {\n      "city": "Oakland",\n      "country": "USA",\n      "state": "CA",\n      "street": "100 Main street",\n      "zipcode": "95053"\n    },\n    "expectedDeliveryDate": "2019-03-31T13:30Z",\n    "orderID": "b00a3d0f-c9f9-4cbd-a6ea-36b8b455c489",\n    "pickupAddress": {\n      "city": "Shanghai",\n      "country": "China",\n      "state": "NE",\n      "street": "1 a new street",\n      "zipcode": "090"\n    },\n    "pickupDate": "2019-01-25T13:30Z",\n    "productID": "Fish",\n    "quantity": 100,\n    "reason": "A container could not be found for this order",\n    "status": "rejected"\n  },\n  "timestampMillis": 1588010563056,\n  "type": "OrderRejected",\n  "version": "1"\n}\n')),Object(a.b)("h2",null,"Order Cancel Event"),Object(a.b)("p",null,"Description: These events are produced as a result of a user/administrator demanding/requesting the cancellation of a shipping order. These events will trigger the process described in the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/order-cancellation/"}),"Order Cancellation")," pattern."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#orders-topic"}),"Order Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/voyages/"}),"Voyages")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-query/"}),"Order Query"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern")),Object(a.b)("li",{parentName:"ul"},"Command Query Responsibility Segregation (CQRS)"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/order-cancellation/"}),"Order Cancellation"))),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/order/orderCancelEvent.avsc"}),"Order Cancel Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "payload": {\n    "containerID": "1392",\n    "customerID": "FishFarm",\n    "destinationAddress": {\n      "city": "Oakland",\n      "country": "USA",\n      "state": "CA",\n      "street": "100 Main street",\n      "zipcode": "95053"\n    },\n    "expectedDeliveryDate": "2019-03-31T13:30Z",\n    "orderID": "649fa8b2-9340-423d-b08c-7fcc633b3a49",\n    "pickupAddress": {\n      "city": "Shanghai",\n      "country": "China",\n      "state": "NE",\n      "street": "1 a new street",\n      "zipcode": "090"\n    },\n    "pickupDate": "2019-01-25T13:30Z",\n    "productID": "Fish",\n    "quantity": 100,\n    "reason": "Cancel order command received",\n    "status": "cancelled",\n    "voyageID": "101"\n  },\n  "timestampMillis": 1588010677588,\n  "type": "OrderCancelled",\n  "version": "1"\n}\n')),Object(a.b)("h2",null,"Error Event"),Object(a.b)("p",null,"Description: These events are produced as a result of any error that occurs in the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command")," component."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#errors-topic"}),"Errors Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command"))),Object(a.b)("p",null,"Components that react to these events: None"),Object(a.b)("p",null,"Patterns these events are relevant to: None"),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/order/errorEvent.avsc"}),"Error Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "errorMessage" : "Repository access issue",\n  "payload": {\n    "containerID": "1392",\n    "customerID": "FishFarm",\n    "destinationAddress": {\n      "city": "Oakland",\n      "country": "USA",\n      "state": "CA",\n      "street": "100 Main street",\n      "zipcode": "95053"\n    },\n    "expectedDeliveryDate": "2019-03-31T13:30Z",\n    "orderID": "649fa8b2-9340-423d-b08c-7fcc633b3a49",\n    "pickupAddress": {\n      "city": "Shanghai",\n      "country": "China",\n      "state": "NE",\n      "street": "1 a new street",\n      "zipcode": "090"\n    },\n    "pickupDate": "2019-01-25T13:30Z",\n    "productID": "Fish",\n    "quantity": 100,\n    "reason": "Cancel order command received",\n    "status": "cancelled",\n    "voyageID": "101"\n  },\n  "timestampMillis": 1588010677588,\n  "type": "Error",\n  "version": "1"\n}\n')),Object(a.b)("h2",null,"Container Added Event"),Object(a.b)("p",null,"Description: These events would make the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/microservices/container-management/"}),"Containers")," component to create a new container and add it to the container inventory it manages."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#containers-topic"}),"Containers Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-query/"}),"Order Query"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Command Query Responsibility Segregation (CQRS)")),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/container/containerAddedEvent.avsc"}),"Container Added Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "containerID": "8919",\n  "payload": {\n    "brand": "itgtests-brand",\n    "capacity": 100,\n    "containerID": "8919",\n    "latitude": 31.4,\n    "longitude": 121.5,\n    "status": "Empty",\n    "type": "Reefer"\n  },\n  "timestamp": 1588010515,\n  "type": "ContainerAdded"\n}\n')),Object(a.b)("h2",null,"Container Assigned Event"),Object(a.b)("p",null,"Description: These messages denote that a container has been assigned to a shipping order as this container suited the quantity and source port of the shipping order."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#containers-topic"}),"Containers Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-query/"}),"Order Query"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Command Query Responsibility Segregation (CQRS)")),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/container/containerAssignedEvent.avsc"}),"Container Assigned Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "containerID": "8919",\n  "payload": {\n    "containerID": "8919",\n    "orderID": "85eb9236-ed11-4ba5-b4ec-055cb261ae6d"\n  },\n  "timestamp": 1588010526382,\n  "type": "ContainerAssignedToOrder"\n}\n')),Object(a.b)("h2",null,"Container Allocated Event"),Object(a.b)("p",null,"Description: These events denote that a container, to carry the amount of fresh goods and from the source port specified in the shipping order, has been found and allocated to a shipping order, and viceversa, as part of the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern")," pattern for a long running transaction. These events are emitted by the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/microservices/container-management/"}),"Containers")," component."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#orders-topic"}),"Order Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-query/"}),"Order Query"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern")),Object(a.b)("li",{parentName:"ul"},"Command Query Responsibility Segregation (CQRS)")),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/container/containerAllocatedEvent.avsc"}),"Container Allocated Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "orderID": "85eb9236-ed11-4ba5-b4ec-055cb261ae6d",\n  "payload": {\n    "containerID": "8919",\n    "orderID": "85eb9236-ed11-4ba5-b4ec-055cb261ae6d"\n  },\n  "timestamp": 1588010526294,\n  "type": "ContainerAllocated"\n}\n')),Object(a.b)("h2",null,"Container Not Found Event"),Object(a.b)("p",null,"Description: These events denote that a container to carry the amount of fresh goods from the source port specified in a new shipping order could not be found. As a result, the new shipping order will become rejected."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#orders-topic"}),"Order Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern"))),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/container/containerNotFoundEvent.avsc"}),"Container Not Found Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "orderID": "b00a3d0f-c9f9-4cbd-a6ea-36b8b455c489",\n  "payload": {\n    "orderID": "b00a3d0f-c9f9-4cbd-a6ea-36b8b455c489",\n    "reason": "A container could not be found for this order"\n  },\n  "timestamp": 1588010563033,\n  "type": "ContainerNotFound"\n}\n')),Object(a.b)("h2",null,"Container Telemetry Event"),Object(a.b)("p",null,"Description: These events are produced by the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/microservices/telemetry-simulator/"}),"Telemetry Simulator")," to simulate the container’s IOT sensor telemetries that are then consumed by the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/microservices/scoring-mp/"}),"Anomalous Container Scoring")," component for the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/container-anomaly/"}),"Container Anomaly")," pattern."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#containers-topic"}),"Containers Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/telemetry-simulator/"}),"Telemetry Simulator"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/scoring-mp/"}),"Anomalous Container Scoring"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/container-anomaly/"}),"Anomalous Container Tracking"))),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/container/containerTelemetryEvent.avsc"}),"Container Telemetry Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "containerID": "1111",\n  "payload": "(1111, 2020-01-15 17:59:45, P05, 5.02702153, 5., 20.52035697, 2.62176459, 0, 1, 5, 21.56977522, 75.97754859, 39.85714797, 110.74727473, True, True, True, 37.8226902168957, -122.324895, 0)",\n  "timestamp": "2020-01-15 17:59:45",\n  "type": "ReeferTelemetries"\n}\n')),Object(a.b)("h2",null,"Container Anomaly Event"),Object(a.b)("p",null,"Description: These events denote an anomaly being predicted for a container based on the telemetry reported by the IOT sensors in the containers. These events will trigger the Business Process Manager (BPM) process whereby a field engineer will get the container assigned in order to repair it. These events are part of the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/container-anomaly/"}),"Container Anomaly")," and ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/dead-letter-queue/"}),"Dead Letter Queue (DLQ)")," patterns."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#containers-topic"}),"Containers Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/scoring-mp/"}),"Anomalous Container Scoring"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/container-anomaly/"}),"Anomalous Container Tracking")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/dead-letter-queue/"}),"Dead Letter Queue (DLQ)"))),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/container/containerAnomalyEvent.avsc"}),"Container Anomaly Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "containerID": "8919",\n  "payload": {\n    "ambiant_temperature": 19.8447,\n    "carbon_dioxide_level": 4.42579,\n    "content_type": 2,\n    "defrost_cycle": 6,\n    "humidity_level": 60.3148,\n    "kilowatts": 3.44686,\n    "latitude": 31.4,\n    "longitude": 121.5,\n    "nitrogen_level": 79.4046,\n    "oxygen_level": 20.4543,\n    "target_temperature": 6,\n    "temperature": 5.49647,\n    "time_door_open": 0.822024,\n    "vent_1": true,\n    "vent_2": true,\n    "vent_3": true\n  },\n  "timestamp": 1588010563033,\n  "type": "ContainerAnomaly"\n}\n')),Object(a.b)("h2",null,"Container Anomaly Retry Event"),Object(a.b)("p",null,"Description: These events denote that the Business Process Manager (BPM) process was not called successfully and, as a result, another call attempt will be made. These events are part of the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/container-anomaly/"}),"Container Anomaly")," and ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/dead-letter-queue/"}),"Dead Letter Queue (DLQ)")," patterns."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#container-anomaly-retry-topic"}),"Container Anomaly Retry Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/container-anomaly/"}),"Anomalous Container Tracking")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/dead-letter-queue/"}),"Dead Letter Queue (DLQ)"))),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/container/containerAnomalyRetryEvent.avsc"}),"Container Anomaly Retry Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "containerID": "5982",\n  "payload": {\n    "ambiant_temperature": 19.8447,\n    "carbon_dioxide_level": 4.42579,\n    "content_type": 2,\n    "defrost_cycle": 6,\n    "humidity_level": 60.3148,\n    "kilowatts": 3.44686,\n    "latitude": 31.4,\n    "longitude": 121.5,\n    "nitrogen_level": 79.4046,\n    "oxygen_level": 20.4543,\n    "target_temperature": 6,\n    "temperature": 5.49647,\n    "time_door_open": 0.822024,\n    "vent_1": true,\n    "vent_2": true,\n    "vent_3": true\n  },\n  "retries": 1,\n  "timestamp": 1588010563033,\n  "type": "ContainerAnomalyRetry"\n}\n')),Object(a.b)("h2",null,"Container Anomaly Dead Event"),Object(a.b)("p",null,"Description: These events denote that the Business Process Manager (BPM) process was not called successfully either because the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/microservices/container-management/"}),"Containers")," component could not successfully authenticate against the Business Process Manager (BPM) or the call to the process did not succeed despite the retries. These events will keep the original container anomaly message’s data and a reason for this message to happen for further analysis by system administrators. These events are part of the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/container-anomaly/"}),"Container Anomaly")," and ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/dead-letter-queue/"}),"Dead Letter Queue (DLQ)")," patterns."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#container-anomaly-dead-topic"}),"Container Anomaly Dead Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers"))),Object(a.b)("p",null,"Components that react to these events: None"),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/container-anomaly/"}),"Anomalous Container Tracking")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/dead-letter-queue/"}),"Dead Letter Queue (DLQ)"))),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/container/containerAnomalyDeadEvent.avsc"}),"Container Anomaly Dead Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "containerID": "5982",\n  "payload": {\n    "ambiant_temperature": 19.8447,\n    "carbon_dioxide_level": 4.42579,\n    "content_type": 2,\n    "defrost_cycle": 6,\n    "humidity_level": 60.3148,\n    "kilowatts": 3.44686,\n    "latitude": 31.4,\n    "longitude": 121.5,\n    "nitrogen_level": 79.4046,\n    "oxygen_level": 20.4543,\n    "target_temperature": 6,\n    "temperature": 5.49647,\n    "time_door_open": 0.822024,\n    "vent_1": true,\n    "vent_2": true,\n    "vent_3": true\n  },\n  "reason": "No more BPM process retries left",\n  "timestamp": 1588010563033,\n  "type": "ContainerAnomalyDead"\n}\n\n')),Object(a.b)("h2",null,"Container On Maintenance Event"),Object(a.b)("p",null,"Description: These events denote that a container has been set into maintenance mode as a result of a field engineer getting the container assigned to be repaired due to an anomaly being reported for such container. These events are a consequence of the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/container-anomaly/"}),"Container Anomaly")," pattern."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#containers-topic"}),"Containers Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-query/"}),"Order Query"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/container-anomaly/"}),"Anomalous Container Tracking")),Object(a.b)("li",{parentName:"ul"},"Command Query Responsibility Segregation (CQRS)")),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/container/containerOnMaintenanceEvent.avsc"}),"Container On Maintenance Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "containerID": "8919",\n  "payload": {\n    "brand": "itgtests-brand",\n    "capacity": 100,\n    "containerID": "8919",\n    "latitude": 31.4,\n    "longitude": 121.5,\n    "status": "Empty",\n    "type": "Reefer"\n  },\n  "timestamp": 1588010716374,\n  "type": "ContainerOnMaintenance"\n}\n')),Object(a.b)("h2",null,"Container Off Maintenance Event"),Object(a.b)("p",null,"Description: These events denote that a container has been set out of maintenance mode as a result of a field engineer having repaired the container as a result of a container anomaly reported. These events are a consequence of the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/container-anomaly/"}),"Container Anomaly")," pattern."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/container-management/"}),"Containers")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-query/"}),"Order Query"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/container-anomaly/"}),"Anomalous Container Tracking")),Object(a.b)("li",{parentName:"ul"},"Command Query Responsibility Segregation (CQRS)")),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/container/containerOffMaintenanceEvent.avsc"}),"Container Off Maintenance Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "containerID": "8919",\n  "payload": {\n    "brand": "itgtests-brand",\n    "capacity": 100,\n    "containerID": "8919",\n    "latitude": 31.4,\n    "longitude": 121.5,\n    "status": "Empty",\n    "type": "Reefer"\n  },\n  "timestamp": 1588010721423,\n  "type": "ContainerOffMaintenance"\n}\n\n')),Object(a.b)("h2",null,"Voyage Assigned Event"),Object(a.b)("p",null,"Description: These events denote that a voyage has been found and assigned to a shipping order, and viceversa, as part of the ",Object(a.b)("a",c({parentName:"p"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern")," pattern for a long running transaction which is triggered as a result of a new shipping order being created. A voyage is a unique carriage of fresh goods by a ship from a source port to a destination port on a specific date."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#orders-topic"}),"Order Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/voyages/"}),"Voyages"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-query/"}),"Order Query"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern")),Object(a.b)("li",{parentName:"ul"},"Command Query Responsibility Segregation (CQRS)")),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/voyage/voyageAssignedEvent.avsc"}),"Voyage Assigned Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "payload": {\n    "orderID": "85eb9236-ed11-4ba5-b4ec-055cb261ae6d",\n    "voyageID": "101"\n  },\n  "timestamp": 1588010536409,\n  "type": "VoyageAssigned",\n  "version": "1"\n}\n')),Object(a.b)("h2",null,"Voyage Not Found Event"),Object(a.b)("p",null,"Description: These events denote that a voyage for carrying the amount of fresh goods from the source port to the destination port on the specific date could not be found. As a result, the new shipping order will become rejected."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#orders-topic"}),"Order Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/voyages/"}),"Voyages"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern"))),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/voyage/voyageNotFoundEvent.avsc"}),"Voyage Not Found Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "payload": {\n    "orderID": "564fa4ac-836a-4826-90f7-8ae50dd90790",\n    "reason": "Insufficient free capacity"\n  },\n  "timestamp": 1588010613958,\n  "type": "VoyageNotFound",\n  "version": "1"\n}\n')),Object(a.b)("h2",null,"Container Metric Event"),Object(a.b)("p",null,"TODO"),Object(a.b)("p",null,"Description: These events denote that a voyage for carrying the amount of fresh goods from the source port to the destination port on the specific date could not be found. As a result, the new shipping order will become rejected."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#orders-topic"}),"Order Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/voyages/"}),"Voyages"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern"))),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/voyage/voyageNotFoundEvent.avsc"}),"Voyage Not Found Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "payload": {\n    "orderID": "564fa4ac-836a-4826-90f7-8ae50dd90790",\n    "reason": "Insufficient free capacity"\n  },\n  "timestamp": 1588010613958,\n  "type": "VoyageNotFound",\n  "version": "1"\n}\n')),Object(a.b)("h2",null,"Ship Position Event"),Object(a.b)("p",null,"TODO"),Object(a.b)("p",null,"Description: These events denote that a voyage for carrying the amount of fresh goods from the source port to the destination port on the specific date could not be found. As a result, the new shipping order will become rejected."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#orders-topic"}),"Order Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/voyages/"}),"Voyages"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern"))),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/voyage/voyageNotFoundEvent.avsc"}),"Voyage Not Found Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "payload": {\n    "orderID": "564fa4ac-836a-4826-90f7-8ae50dd90790",\n    "reason": "Insufficient free capacity"\n  },\n  "timestamp": 1588010613958,\n  "type": "VoyageNotFound",\n  "version": "1"\n}\n')),Object(a.b)("h2",null,"Bluewater Problem Event"),Object(a.b)("p",null,"TODO"),Object(a.b)("p",null,"Description: These events denote that a voyage for carrying the amount of fresh goods from the source port to the destination port on the specific date could not be found. As a result, the new shipping order will become rejected."),Object(a.b)("p",null,"Topic these events are produced to/consumed from:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/topic-details/#orders-topic"}),"Order Topic"))),Object(a.b)("p",null,"Components that produce these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/voyages/"}),"Voyages"))),Object(a.b)("p",null,"Components that react to these events:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/microservices/order-command/"}),"Order Command"))),Object(a.b)("p",null,"Patterns these events are relevant to:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"/refarch-kc/implementation/saga-patterns/"}),"Saga pattern"))),Object(a.b)("p",null,"Data Schema: ",Object(a.b)("a",c({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc/data_schemas/ibm/eda/kc/voyage/voyageNotFoundEvent.avsc"}),"Voyage Not Found Event Schema")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-json"}),'{\n  "payload": {\n    "orderID": "564fa4ac-836a-4826-90f7-8ae50dd90790",\n    "reason": "Insufficient free capacity"\n  },\n  "timestamp": 1588010613958,\n  "type": "VoyageNotFound",\n  "version": "1"\n}\n')))}u.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-microservices-event-details-index-mdx-d2e5e5404ef31d2624ab.js.map