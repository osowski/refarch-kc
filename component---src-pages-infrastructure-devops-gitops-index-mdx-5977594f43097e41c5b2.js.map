{"version":3,"sources":["webpack:///./src/pages/infrastructure/devops-gitops/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","InlineNotification","PageDescription","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","kind","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-infrastructure-devops-gitops-index-mdx-5977594f43097e41c5b2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/refarch-kc/refarch-kc/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\"><strong>TODO</strong> - WORK IN PROGRESS</InlineNotification>\n    <PageDescription mdxType=\"PageDescription\">\nThe implemented DevOps pipelines for the Reefer Container Shipment solution reference implementation of the Event-Driven Reference Architecture. This chapter focuses on the <strong>GitOps</strong> capability implemented in the reference implementation.\n    </PageDescription>\n    <h1>{`Overview`}</h1>\n    <p>{`Our `}<a parentName=\"p\" {...{\n        \"href\": \"/refarch-kc/infrastructure/devops-continuous-integration/\"\n      }}>{`Continuous Integration (CI) approach`}</a>{` is one of “zero-infrastructure overhead”. To accomplish this goal, we utilize `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/features/actions\"\n      }}>{`GitHub Actions`}</a>{` to build and push a microservice’s associated container images to `}<a parentName=\"p\" {...{\n        \"href\": \"https://hub.docker.com/u/ibmcase\"\n      }}>{`Docker Hub`}</a>{` for public consumption. The GitHub Actions workflows are defined in the owning repository’s `}<inlineCode parentName=\"p\">{`.github/workflows/dockerbuild.yaml`}</inlineCode>{` file.`}</p>\n    <p>{`Our `}<a parentName=\"p\" {...{\n        \"href\": \"#gitops\"\n      }}>{`GitOps approach`}</a>{`, `}<em parentName=\"p\">{`the topic of this chapter`}</em>{`, focuses on a single-repository, environment-per-subdirectory model which can be forked and cloned to replicate deployments to other clusters and environments. The reference implementation utilizes `}<a parentName=\"p\" {...{\n        \"href\": \"https://kustomize.io/\"\n      }}>{`Kustomize`}</a>{` as its templating technology to utilize the `}<inlineCode parentName=\"p\">{`app-deploy.yaml`}</inlineCode>{` files, provided by each individual microservice, as a base and then layer in environment-specific configuration and credentials as needed.`}</p>\n    <p>{`Our `}<a parentName=\"p\" {...{\n        \"href\": \"/refarch-kc/infrastructure/devops-continuous-delivery/\"\n      }}>{`Continuous Delivery (CD) approach`}</a>{` focuses on a GitOps-based delivery model, using a GitHub repository as a single source of truth for the deployment, management, and operations of our running application components. In this model, we have the flexibility to use multiple open-source technologies to apply the single source of truth from a given GitHub repository onto a desired cluster environment.`}</p>\n    <h1>{`GitOps`}</h1>\n    <p>{`If you are unfamiliar with GitOps as a practice, additional details around the background of GitOps and how it differs from traditional deployment models can be found in `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.weave.works/technologies/gitops/\"\n      }}>{`this blog post`}</a>{` from WeaveWorks.`}</p>\n    <h2>{`Environment overview`}</h2>\n    <p>{`The GitOps environments are defined in the `}<inlineCode parentName=\"p\">{`environments`}</inlineCode>{` sub-directory, allowing for multiple environments (phases, stages, teams, etc) to be deployed from a single GitHub repository. This is a streamlined implementation from our previous environment-per-branch approach as it is a bit simpler to maintain for our team. Your team may have success with either structure.`}</p>\n    <p>{`Each environment has the following default directory structure:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`environments\n├── dev\n│   ├── apps\n│   │   └── refarch-kc\n│   │       ├── base\n│   │       │   └── kustomization.yaml\n│   │       ├── kustomization.yaml\n│   │       └── overlays\n│   │           └── kustomization.yaml\n│   ├── env\n│   │   ├── base\n│   │   │   └── kustomization.yaml\n│   │   ├── kustomization.yaml\n│   │   └── overlays\n│   │       └── kustomization.yaml\n│   ├── infrastructure\n│   │   └── kustomization.yaml\n│   ├── kustomization.yaml\n│   └── services\n│       ├── fleetms\n│       │   ├── base\n│       │   │   ├── config\n│       │   │   │   ├── app-deploy.yaml\n│       │   │   │   └── kustomization.yaml\n│       │   │   └── kustomization.yaml\n│       │   ├── kustomization.yaml\n│       │   └── overlays\n│       │       ├── kustomization.yaml\n...\n│       └── voyagesms\n│           ├── base\n│           │   ├── config\n│           │   │   ├── app-deploy.yaml\n│           │   │   └── kustomization.yaml\n│           │   └── kustomization.yaml\n│           ├── kustomization.yaml\n│           └── overlays\n│               └── kustomization.yaml\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`apps/refarch-kc`}</strong>{` subdirectory\nThis subdirectory aggregates together all the microservices that comprise the `}<inlineCode parentName=\"p\">{`refarch-kc`}</inlineCode>{` reference implementation. It also applies the common label of `}<inlineCode parentName=\"p\">{`app.kubernetes.io/part-of: refarch-kc`}</inlineCode>{` to all the deployed components for easier management.`}</p>\n        <p parentName=\"li\">{`In the `}<inlineCode parentName=\"p\">{`dev`}</inlineCode>{` environment, this subdirectory also contains the `}<inlineCode parentName=\"p\">{`KafkaTopics`}</inlineCode>{` CRDs to automatically create the required Kafka Topics inside the Kafka cluster (as the `}<inlineCode parentName=\"p\">{`dev`}</inlineCode>{` environments utilizes the Strimzi Operator for cluster management).`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`env`}</strong>{` subdirectory\nThis subdirectory provides all the necessary ServiceAccount, ConfigsMap and Secret configuration. Depending upon your environment, most of your customization of a new environment will be done in this subdirectory.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`infrastructure`}</strong>{` subdirectory\nThis optional subdirectory provides the ability to create a Kubernetes Namespace / OpenShift Project and any necessary backing services ahead of application microservice deployment. This is only used in the `}<inlineCode parentName=\"p\">{`dev`}</inlineCode>{` environment, as a way to demonstrate the ability to create a fully-managed environment from scratch.`}</p>\n        <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">When you create your environment via `kubectl apply -k environments/dev` with a Namespace definition in the `infrastructure` subdirectory, running `kubectl delete -k environments/dev` will delete the namespace!</InlineNotification>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`services`}</strong>{` subdirectory\nThis subdirectory provides all the necessary deployment configurations for the `}<inlineCode parentName=\"p\">{`AppsodyApplication`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`OpenLiberty`}</inlineCode>{` applications that make up the reference implementation. The `}<inlineCode parentName=\"p\">{`/base/config/app-deploy.yaml`}</inlineCode>{` file in each `}<inlineCode parentName=\"p\">{`services`}</inlineCode>{` subdirectory is automatically maintained by our `}<a parentName=\"p\" {...{\n            \"href\": \"/refarch-kc/infrastructure/devops-gitops/\"\n          }}>{`GitOps`}</a>{` pipelines.`}</p>\n        <p parentName=\"li\">{`The main area of customization for individual environments will be done in each service’s `}<inlineCode parentName=\"p\">{`overlays`}</inlineCode>{` subdirectory, as this subdirectory provides the ability to modify and update the base `}<inlineCode parentName=\"p\">{`app-deploy.yaml`}</inlineCode>{` file at deploy time.`}</p>\n      </li>\n    </ul>\n    <h2>{`Service overview`}</h2>\n    <p>{`TBD`}</p>\n    <p>{`In this section, we will walk through the Fleet microservice’s `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ibm-cloud-architecture/refarch-kc-gitops/tree/master/environments/example-es-truststore/services/fleetms/overlays\"\n      }}><inlineCode parentName=\"a\">{`/overlays`}</inlineCode>{` subdirectory `}</a>{` to describe what operations can be performed on the base `}<inlineCode parentName=\"p\">{`app-deploy.yaml`}</inlineCode>{` through the Kustomize framework.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Adding Kafka credentials`}</strong></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Adding Kafka certificates`}</strong></p>\n      </li>\n    </ol>\n    <h2>{`Reference Implementation environments`}</h2>\n    <p>{`We have provided a few sample environments to get started.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/ibm-cloud-architecture/refarch-kc-gitops/tree/master/environments/dev\"\n          }}><strong parentName=\"a\"><inlineCode parentName=\"strong\">{`dev`}</inlineCode></strong>{` environment`}</a>{`: This environment is deployable to any Kubernetes or OCP cluster and provides its own dedicated backing services.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/ibm-cloud-architecture/refarch-kc-gitops/tree/master/environments/example-credentials\"\n          }}><strong parentName=\"a\"><inlineCode parentName=\"strong\">{`example-credentials`}</inlineCode></strong>{` environment`}</a>{`: This example configures the microservices to connect to a Postgres database with SSL verification enabled and to Event Streams using an API key - utilizing both of these backing services through off-cluster service providers.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/ibm-cloud-architecture/refarch-kc-gitops/tree/master/environments/example-es-truststore\"\n          }}><strong parentName=\"a\"><inlineCode parentName=\"strong\">{`example-es-truststore`}</inlineCode></strong>{` environment`}</a>{`: This example configures the microservices to connect to a Postgres database and to Event Streams using an API key, with both services having SSL verification enabled. The Event Streams certificate is provided as a Java truststore to the Java-based microservices and a PEM file to the non-Java-based microservices.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"https://github.com/ibm-cloud-architecture/refarch-kc-gitops/tree/master/environments/eda-integration-2020.08\"\n          }}><strong parentName=\"a\"><inlineCode parentName=\"strong\">{`eda-integration-XXXX.YY`}</inlineCode></strong>{` environment`}</a>{`: This environment is our squad’s integration environment for a fully-automated end-to-end build pipeline, with the target environment being a `}<a parentName=\"p\" {...{\n            \"href\": \"https://cloud.ibm.com/kubernetes/catalog/create?platformType=openshift\"\n          }}>{`Red Hat OpenShift Container Platform cluster running on IBM Cloud`}</a>{`.`}</p>\n      </li>\n    </ul>\n    <h2>{`Creating a new environment`}</h2>\n    <p>{`TBD`}</p>\n    <p>{`To create a new environment, you will want to use one of the environments described above as a template and refine it as needed.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Fork this repository.`}</li>\n      <li parentName=\"ol\">{`Copy the desired environment to a new subdirectory in the `}<inlineCode parentName=\"li\">{`/environments`}</inlineCode>{` directory.`}</li>\n      <li parentName=\"ol\">{`???`}</li>\n      <li parentName=\"ol\">{`Profit`}</li>\n    </ol>\n    <p><strong parentName=\"p\">{`Warnings, Gotchas, and Things You Should Care About:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Namespace ???`}</li>\n    </ul>\n    <h1>{`Next steps`}</h1>\n    <p><em parentName=\"p\">{`For details on how the Continuous Delivery implementation leverages the GitOps artifacts,`}</em>{` reference the peer `}<a parentName=\"p\" {...{\n        \"href\": \"/refarch-kc/infrastructure/devops-continuous-delivery/\"\n      }}>{`Continuous Delivery (CD)`}</a>{` chapter of this manual.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}