{"version":3,"sources":["webpack:///./src/pages/microservices/fleet/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","InlineNotification","AnchorLinks","AnchorLink","PageDescription","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","kind","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAqBL,EAAc,sBACnCM,EAAcN,EAAc,eAC5BO,EAAaP,EAAc,cAC3BQ,EAAkBR,EAAc,mBAChCS,EAAc,CAClBV,gBAEIW,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGX,E,oIACF,mBACD,OAAO,YAACQ,EAAD,KAAeD,EAAiBP,EAAhC,CAAuCW,WAAYA,EAAYC,QAAQ,cAG5E,YAACT,EAAD,CAAoBU,KAAK,UAAUD,QAAQ,sBAA3C,sBACA,YAACR,EAAD,CAAaQ,QAAQ,eACvB,YAACP,EAAD,CAAYO,QAAQ,cAApB,YACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,SACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,OACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,qBACA,YAACP,EAAD,CAAYO,QAAQ,cAApB,2BAEE,kCACA,YAACN,EAAD,CAAiBM,QAAQ,mBAAzB,wWAGA,8DAA6C,mBAAGE,WAAW,KAAQ,CAC/D,KAAQ,iFADiC,gFAA7C,KAGA,sSACA,6CACA,sBACE,kBAAIA,WAAW,MAAf,4CACA,kBAAIA,WAAW,MAAf,4CACA,kBAAIA,WAAW,MAAf,kGACA,kBAAIA,WAAW,MAAf,+BACA,kBAAIA,WAAW,MAAf,uEAEF,sDAAqC,mBAAGA,WAAW,KAAQ,CACvD,KAAQ,8FADyB,sDAGrC,wCACA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,0CADQ,SAApB,iDAGA,kBAAIA,WAAW,MAAf,yCAA8D,kBAAIA,WAAW,MACzE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uEADQ,2BAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,gDADQ,iDAApB,SAGL,mBAAGA,WAAW,MAAS,CACd,KAAQ,6EADjB,qCAHK,kDAQJ,kBAAIA,WAAW,MAAf,WAAgC,mBAAGA,WAAW,MAAS,CACnD,KAAQ,uCADoB,wBAAhC,8BAGA,kBAAIA,WAAW,MAAf,uEAA4F,0BAAYA,WAAW,MAAvB,kEAA5F,oHAA4T,0BAAYA,WAAW,MAAvB,YAA5T,YACA,kBAAIA,WAAW,MAAf,mDAEF,sCACA,oPACA,iBAAQ,CACN,UAAa,sBAEb,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,oIAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,0KAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,+NAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,yGAOA,oBAAIA,WAAW,MAAS,CACtB,UAAa,mBACZ,uBAAOA,WAAW,MAAS,CAC1B,KAAQ,WACR,SAAW,EACX,UAAY,KALhB,6FAQF,+BACA,oCACA,6BACA,oCACA,2CACA,wCAAuB,mBAAGA,WAAW,KAAQ,CACzC,KAAQ,yGADW,yGAGvB,gDACA,wCAAuB,mBAAGA,WAAW,KAAQ,CACzC,KAAQ,oEADW,qEAO3BJ,EAAWK,gBAAiB","file":"component---src-pages-microservices-fleet-index-mdx-7010eca8efc22bdbfa0b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/refarch-kc/refarch-kc/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">UNDER CONSTRUCTION</InlineNotification>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Overview</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Build</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Run</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Integration Tests</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Implementation Details</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Overview`}</h2>\n    <PageDescription mdxType=\"PageDescription\">\nThis microservice is responsible to support simulation of fleet of container carrier vessels. It used for demonstration purpose, but it is still using an event-driven microservice implementation approach. It supports the event, actors, and commands discovered during the event storming workshop and illustrated by the following figure for the \"ship actor\".\n    </PageDescription>\n    <p>{`The source repository can be found at `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ibm-cloud-architecture/refarch-kc-ms/tree/master/fleet-ms\"\n      }}>{`https://github.com/ibm-cloud-architecture/refarch-kc-ms/tree/master/fleet-ms`}</a>{`.`}</p>\n    <p>{`The service exposes simple REST API to support getting ships and fleets information, and start and stop simulator to emulate ship movements and container metrics events generation. When a ship leaves or enters it will also generate the events as listed in the analysis.`}</p>\n    <h2>{`What you will learn`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Using JAXRS API to define REST resources`}</li>\n      <li parentName=\"ul\">{`Using microprofile for API documentation`}</li>\n      <li parentName=\"ul\">{`How to leverage WebSphere Liberty in container to support simple JEE and microprofile services`}</li>\n      <li parentName=\"ul\">{`Kafka producer code example`}</li>\n      <li parentName=\"ul\">{`Test Driven Development with JAXRS and Integration test with Kafka`}</li>\n    </ul>\n    <p>{`We recommend also reading the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ibm-cloud-architecture/refarch-eda/blob/master/docs/kafka/producers.md\"\n      }}>{`producer design and coding considerations article`}</a></p>\n    <h2>{`Pre-Requisites`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://maven.apache.org/install.html\"\n        }}>{`Maven`}</a>{` used to compile and package the application.`}</li>\n      <li parentName=\"ul\">{`Java 8: Any compliant JVM should work.`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"http://www.oracle.com/technetwork/java/javase/downloads/index.html\"\n            }}>{`Java 8 JDK from Oracle`}</a></li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"http://www.ibm.com/developerworks/java/jdk/\"\n            }}>{`Java 8 JDK from IBM (AIX, Linux, z/OS, IBM i)`}</a>{`,\nor `}<a parentName=\"li\" {...{\n              \"href\": \"https://developer.ibm.com/assets/wasdev/#filter/assetTypeFilters=PRODUCT\"\n            }}>{`Download a Liberty server package`}</a>{`\nthat contains the IBM JDK (Windows, Linux)`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`We used `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.eclipse.org/downloads/\"\n        }}>{`Eclipse 2018 edition`}</a>{` IDE for Java development.`}</li>\n      <li parentName=\"ul\">{`Clone the parent project to get access to docker compose yml files: `}<inlineCode parentName=\"li\">{`git clone https://github.com/ibm-cloud-architecture/refarch-kc`}</inlineCode>{`. Normally you should have access to this repository from the main reference implementation repository using the `}<inlineCode parentName=\"li\">{`clone.sh`}</inlineCode>{` script.`}</li>\n      <li parentName=\"ul\">{`Have docker engine installed on your computer.`}</li>\n    </ul>\n    <h2>{`User stories`}</h2>\n    <p>{`This service keeps track of each of the container ships available for transporting containers. Each ship has a unique shipID. We limit the scope of a minimum viable product so the following user stories are implemented:`}</p>\n    <ul {...{\n      \"className\": \"contains-task-list\"\n    }}>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`The information about each ship is kept in a json file for a fleet. Ships are uniquely identified by their name (as shipID).`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`The capacity of a ship is represented by a matrix, number of rows x number of columns to make it simpler. Therefore the total number of container is rows*columns.`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": true,\n          \"disabled\": true\n        }}></input>{` `}{`Support GPS lat/log position reports, as ship position event, of the position of the ship a different point in time. This is modeled as csv file with one row of (lat,log) pair, a row representing a time stamp. (1h?)`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Generate ship event when leaving source port and when entering destination port, and when docked.`}</li>\n      <li parentName=\"ul\" {...{\n        \"className\": \"task-list-item\"\n      }}><input parentName=\"li\" {...{\n          \"type\": \"checkbox\",\n          \"checked\": false,\n          \"disabled\": true\n        }}></input>{` `}{`Define query of what happen to a ship from a given time to retrace its past voyages.`}</li>\n    </ul>\n    <h2>{`Build`}</h2>\n    <p>{`TBD Appsody`}</p>\n    <h2>{`Run`}</h2>\n    <p>{`TBD Appsody`}</p>\n    <h2>{`Integration Tests`}</h2>\n    <p>{`TBD Source from `}<a parentName=\"p\" {...{\n        \"href\": \"https://ibm-cloud-architecture.github.io/refarch-kc-ms/fleetms/#running-integration-tests-with-kafka\"\n      }}>{`https://ibm-cloud-architecture.github.io/refarch-kc-ms/fleetms/#running-integration-tests-with-kafka`}</a></p>\n    <h2>{`Implementation Details`}</h2>\n    <p>{`TBD Source from `}<a parentName=\"p\" {...{\n        \"href\": \"https://ibm-cloud-architecture.github.io/refarch-kc-ms/fleetms/\"\n      }}>{`https://ibm-cloud-architecture.github.io/refarch-kc-ms/fleetms/`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}