{"version":3,"sources":["webpack:///./src/pages/deployments/docker.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"2eAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kHACA,qCACA,kCAAiB,mBAAGC,WAAW,KAAQ,CACnC,KAAQ,6DADK,6DAGjB,uCACA,2CACA,wDACA,sBACE,kBAAIA,WAAW,MAAf,4CAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,sHAIL,kCACA,sBACE,kBAAIA,WAAW,MAAf,mBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,kCAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,oBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,iCAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,qBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,wKAEL,mCACA,sBACE,kBAAIA,WAAW,MAAf,mBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,oCAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,oBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,iCAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,qBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,oMAEL,0CACA,sBACE,kBAAIA,WAAW,MAAf,mBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,gDAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,oBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,iCAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,qBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,2MAEL,wCACA,sBACE,kBAAIA,WAAW,MAAf,mBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,8CAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,oBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,iCAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,qBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,2MAEL,sCACA,sBACE,kBAAIA,WAAW,MAAf,mBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,mDAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,oBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,iCAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,qBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,wbAYL,6BACA,sBACE,kBAAIA,WAAW,MAAf,mBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,wBAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,oBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,iCAEL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MAAf,qBAEF,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,wVAMTJ,EAAWK,gBAAiB","file":"component---src-pages-deployments-docker-mdx-76bab5bcc4893fec4e74.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/refarch-kc/refarch-kc/docs-gatsby/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`To build and run the solution locally using docker, please follow the below instructions.`}</p>\n    <h2>{`Get the app`}</h2>\n    <p>{`git clone `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ibm-cloud-architecture/refarch-kc.git\"\n      }}>{`https://github.com/ibm-cloud-architecture/refarch-kc.git`}</a></p>\n    <p>{`cd refarch-kc/`}</p>\n    <p>{`./scripts/clone.sh`}</p>\n    <h2>{`Setting up Kafka and Zookeeper`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Deploying Kafka and Zookeeper on Docker`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`$ cd docker && docker-compose -f backbone-compose.yml up -d >& backend.logs\n\n$ ./scripts/createLocalTopics.sh\n`}</code></pre>\n    <h2>{`Fleet ms`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Go to the repo`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`$ cd refarch-kc-ms/fleet-ms\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Build the image`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`$ ./scripts/buildDocker.sh\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Deploy on docker`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`$ docker run -it --name fleetms -e KAFKA_BROKERS=\"<your_kafka_brokers>\" -e KAFKA_ENV=\"<LOCAL or IBMCLOUD or ICP>\" -d -p 9080:9080 -p 9444:9443 ibmcase/kc-fleetms\n`}</code></pre>\n    <h2>{`Voyage ms`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Go to the repo`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`$ cd refarch-kc-ms/voyages-ms\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Build the image`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`$ ./scripts/buildDocker.sh\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Deploy on docker`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`$ docker run -it --name voyages -e KAFKA_BROKERS=\"<your_kafka_brokers>\" -e KAFKA_ENV=\"<LOCAL or IBMCLOUD or ICP>\" -e KAFKA_APIKEY=\"<your_kafka_api_key>\" -d -p 3100:3000 ibmcase/kc-voyagesms\n`}</code></pre>\n    <h2>{`Order command ms`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Go to the repo`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`$ cd refarch-kc-order-ms/order-command-ms\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Build the image`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`$ ./scripts/buildDocker.sh\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Deploy on docker`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`$ docker run -it --name ordercmd -e KAFKA_BROKERS=\"<your_kafka_brokers>\" -e KAFKA_ENV=\"<LOCAL or IBMCLOUD or ICP>\" -e KAFKA_APIKEY=\"<your_kafka_api_key>\" -d -p 10080:9080 ibmcase/kc-ordercommandms\n`}</code></pre>\n    <h2>{`Order query ms`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Go to the repo`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`$ cd refarch-kc-order-ms/order-query-ms\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Build the image`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`$ ./scripts/buildDocker.sh\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Deploy on docker`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`$ docker run -it --name orderquery -e KAFKA_BROKERS=\"<your_kafka_brokers>\" -e KAFKA_ENV=\"<LOCAL or IBMCLOUD or ICP>\" -e KAFKA_APIKEY=\"<your_kafka_api_key>\" -d -p 11080:9080 ibmcase/kc-orderqueryms\n`}</code></pre>\n    <h2>{`Container ms`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Go to the repo`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`cd refarch-kc-container-ms/SpringContainerMS\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Build the image`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`$ ./scripts/buildDocker.sh\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Deploy on docker`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`docker run --name springcontainerms \\\\\n--network docker_default \\\\\n  -e KAFKA_ENV=$KAFKA_ENV \\\\\n  -e KAFKA_BROKERS=$KAFKA_BROKERS \\\\\n  -e KAFKA_APIKEY=$KAFKA_APIKEY \\\\\n  -e POSTGRESQL_URL=$POSTGRESQL_URL \\\\\n  -e POSTGRESQL_CA_PEM=\"$POSTGRESQL_CA_PEM\" \\\\\n  -e POSTGRESQL_USER=$POSTGRESQL_USER \\\\\n  -e POSTGRESQL_PWD=$POSTGRESQL_PWD \\\\\n  -e TRUSTSTORE_PWD=\\${TRUSTSTORE_PWD} \\\\\n  -p 8080:8080 -ti  ibmcase/kc-springcontainerms\n`}</code></pre>\n    <h2>{`Web`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Go to the repo`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`cd refarch-kc-ui/\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Build the image`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`$ ./scripts/buildDocker.sh\n`}</code></pre>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Deploy on docker`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{}}>{`docker run -it --name kcsolution -e KAFKA_BROKERS=\"<your_kafka_brokers>\" -e FLEET_MS_URL=\"<fleetms_url\" ORDER_MS_URL=\"<orderms_url>\" VOYAGE_MS_URL=\"<voyagems_url>\" --link fleetms:fleetms --link voyages:voyages --link ordercmd:ordercmd --link orderquery:orderquery --link springcontainerms:springcontainerms -d -p 3110:3010 ibmcase/kc-ui\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}