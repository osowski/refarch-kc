(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"22P9":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return l})),a.d(t,"default",(function(){return o}));a("91GP"),a("rGqo"),a("yt8O"),a("Btvt"),a("RW0V"),a("q1tI");var r=a("7ljp"),n=a("013z");a("qKvR");function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e}).apply(this,arguments)}var l={},b={_frontmatter:l},i=n.a;function o(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)a=c[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,["components"]);return Object(r.b)(i,c({},b,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",null,"Core Components"),Object(r.b)("p",null,"This solution supports a set of related repositories which includes user interface, a set of microservices to implement the Event Sourcing and CQRS patterns, and to implement simulators and analytics content.\nIn each repository, we are explaining the design and implementation approach, how to build and run them for development purpose."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"Component")," links below will take you to the individual component pages in the ",Object(r.b)("strong",{parentName:"p"},"Microservices Details")," section of this manual, while the ",Object(r.b)("strong",{parentName:"p"},"GitHub Repository")," links will take you directly to the source code for each individual component."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"MVP Level")," denotes minimal level of system capability to demostrate overall solution functionality.  ",Object(r.b)("em",{parentName:"p"},"MVP Level 1")," requires the least amount of components, ",Object(r.b)("em",{parentName:"p"},"MVP Level 2")," requires more components, and so on."),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",c({parentName:"tr"},{align:null}),"Component"),Object(r.b)("th",c({parentName:"tr"},{align:null}),"GitHub Repository"),Object(r.b)("th",c({parentName:"tr"},{align:null}),"MVP Level"),Object(r.b)("th",c({parentName:"tr"},{align:null}),"Language(s)"),Object(r.b)("th",c({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"/refarch-kc/microservices/user-interface/"}),"User Interface")),Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc-ui"}),"refarch-kc-ui")),Object(r.b)("td",c({parentName:"tr"},{align:null}),"1"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Angular 7"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"User Interface and Backend For Frontend server used for demonstration purpose")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",c({parentName:"tr"},{align:null}),"*",Object(r.b)("a",c({parentName:"td"},{href:"/refarch-kc/microservices/order-command/"}),"Order Management Command microservice")),Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc-order-ms/tree/master/order-command-ms"}),"refarch-kc-order-ms/order-command")),Object(r.b)("td",c({parentName:"tr"},{align:null}),"1"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Java with Liberty & MicroProfile"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Order management using CQRS and event sourcing pattern")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",c({parentName:"tr"},{align:null}),"*",Object(r.b)("a",c({parentName:"td"},{href:"/refarch-kc/microservices/order-query/"}),"Order Management Query microservice")),Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc-order-ms/tree/master/order-query-ms"}),"refarch-kc-order-ms/order-query")),Object(r.b)("td",c({parentName:"tr"},{align:null}),"1"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Java with Liberty & MicroProfile"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Order management using CQRS and event sourcing pattern")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"/refarch-kc/microservices/container-management/"}),"Container Management microservice")),Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc-container-ms/"}),"refarch-kc-container-ms")),Object(r.b)("td",c({parentName:"tr"},{align:null}),"2"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Spring Boot Java, Python"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Reefer container management microservice in different programming language, and to define python tools to do machine learning on top of event store from Kafka.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"/refarch-kc/microservices/fleet/"}),"Fleet microservice")),Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc-ms/tree/master/fleet-ms"}),"refarch-kc-ms/fleet-ms")),Object(r.b)("td",c({parentName:"tr"},{align:null}),"2"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Java"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Simulation of a fleet of container carrier vessels")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"/refarch-kc/microservices/voyages/"}),"Voyages microservice")),Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc-ms/tree/master/voyage-ms"}),"refarch-kc-ms/voyages-ms")),Object(r.b)("td",c({parentName:"tr"},{align:null}),"2"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"NodeJS"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Supports the order management and ship voyage assignment, using Nodejs / express and kafka javascript APIs.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"/refarch-kc/microservices/scoring-mp/"}),"Reefer predictive maintenance")),Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"https://github.com/ibm-cloud-architecture/refarch-reefer-ml"}),"refarch-reefer-ml")),Object(r.b)("td",c({parentName:"tr"},{align:null}),"3"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Python"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Uses Reefer container metrics like power, temperature, CO2, or other sensors to build a machine learning model, deploy it as a service and run it on Event Streams.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"/refarch-kc/microservices/vessel-simulator/"}),"Vessel Movement Simulator")),Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc-vessel-simulator"}),"refarch-kc-vessel-simulator")),Object(r.b)("td",c({parentName:"tr"},{align:null}),"3"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Java with Liberty & MicroProfile"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"This a simple vessel source events generator - generating data for a route between two harbors, the vessel characteristics, and the geodetic curve shortest path that the vessel could travel.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",c({parentName:"tr"},{align:null}),"MQ to Kafka integration with a ‘legacy’ app"),Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"https://github.com/ibm-cloud-architecture/refarch-container-inventory/"}),"refarch-container-inventory")),Object(r.b)("td",c({parentName:"tr"},{align:null}),"4"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Java"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Bi-directional connections between MQ and Kafka, using a legacy JEE app to manage the inventory for metal and Reefer containers, but only Reefer information is sent to Kafka.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",c({parentName:"tr"},{align:null}),"Real time analytics"),Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"https://github.com/ibm-cloud-architecture/refarch-kc-streams"}),"refarch-kc-streams")),Object(r.b)("td",c({parentName:"tr"},{align:null}),"4"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Python"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"IBM Streaming Analytics to identify problem on containers from real time events.")))),Object(r.b)("h2",null,"Related Repositories"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",c({parentName:"tr"},{align:null}),"Component"),Object(r.b)("th",c({parentName:"tr"},{align:null}),"GitHub Repository"),Object(r.b)("th",c({parentName:"tr"},{align:null}),"MVP Level*"),Object(r.b)("th",c({parentName:"tr"},{align:null}),"Language(s)"),Object(r.b)("th",c({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",c({parentName:"tr"},{align:null}),"Kafka order producer"),Object(r.b)("td",c({parentName:"tr"},{align:null}),Object(r.b)("a",c({parentName:"td"},{href:"https://github.com/jbcodeforce/order-producer-python"}),"jbcodeforce/order-producer-python")),Object(r.b)("td",c({parentName:"tr"},{align:null}),"n/a"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Python and Flask"),Object(r.b)("td",c({parentName:"tr"},{align:null}),"Quickly test an IBM Cloud Event Streams deployment.")))))}o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-business-scenario-repository-overview-index-mdx-e2ff85cf6f38e56add00.js.map