{"componentChunkName":"component---src-pages-itg-tests-container-anomaly-container-anomaly-mdx","path":"/itg-tests/containerAnomaly/containerAnomaly/","result":{"pageContext":{"frontmatter":{"title":"Container Anomaly Use Case","description":"Container Anomaly Use Case"},"relativePagePath":"/itg-tests/containerAnomaly/containerAnomaly.mdx","titleType":"append","MdxNode":{"id":"e1fbff09-ded6-541e-88f8-aec50e5d2675","children":[],"parent":"fd49179a-d1b1-5f18-9560-2464acf2358e","internal":{"content":"---\ntitle: Container Anomaly Use Case\ndescription: Container Anomaly Use Case\n---\n\nThis test case will test the use whereby a container suffers some anomaly. As a result, ContainerAnomaly events are sent to set the container for maintenance mode. A BPM process will take care of setting a container into inMaintenance mode, assigning a technician to repair the container and finally setting that container back to being empty and available. This test case will also ensure the order the container with the anomaly was carrying is marked spoilt. The following diagram depics roughly this path on a flow base fashion where the blue square rectangles, purple rounded rectangles and orange rectangles represent actions taken by the test case, events produced to the event backbone (either Kafka or IBM Event Streams) and object statuses respectively.\n\n![flow](container_anomaly_images/Slide1.png)\n\n## Tests\n\nThe following sequence diagrams represent each of the tests within this container anomaly integration test case.\n\n### Test 1 - Disable BPM\n\nThis test will make sure that when the application is deployed, the BPM anomaly service is enabled. However, it will then disable the BPM anomaly service in order to mockup the call and be able to carry on with this container anomaly test.\n\n![container anomaly](container_anomaly_images/Slide2.png)\n\n### Test 2 - Send Anomaly Events\n\nThis tests will send the ContainerAnomaly events needed to trigger the bpm call process and order spoilage.\n\n![container anomaly](container_anomaly_images/Slide3.png)\n\n### Test 3 - Container in MaintenanceNeeded Status\n\nThis test will make sure the container which ContainerAnomaly events have been sent for gets into MaintenanceNeeded status as a result.\n\n![maintenanceNeeded](container_anomaly_images/Slide4.png)\n\n### Test 4 - Order Spoilt\n\nThis test will make sure that the order the container which ContainerAnomaly events have been sent for was carrying gets into spoilt status as a result.\n\n![order spoilt](container_anomaly_images/Slide5.png)\n\n### Test 5 - Container To Maintenance\n\nThis test will call the toMaintenance API endpoint for setting a container into inMaintenance mode.\n\n![container toMaintenance](container_anomaly_images/Slide6.png)\n\n### Test 6 - Container InMaintenance Status\n\nThis test will make sure that the container that was set into inMaintenance mode in the previous test, is now indeed into inMaintenance mode.\n\n![container inMaintenance](container_anomaly_images/Slide7.png)\n\n### Test 7 - Container Off Maintenance\n\nThis test will set the container that was inMaintenance status off maintenance.\n\n![order assigned](container_anomaly_images/Slide8.png)\n\n### Test 8 - Container Empty Status\n\nThis test will make sure that the container that was set off maintenance mode in the previous test, is now indeed empty and available.\n\n![container empty](container_anomaly_images/Slide9.png)\n\n### Test 9 - Enable BPM\n\nThis test will make sure that the BPM anomaly service is enabled for the application to work as expected.\n\n![container anomaly](container_anomaly_images/Slide10.png)","type":"Mdx","contentDigest":"323f7f539b31c01598ecb9f14ecbcc87","counter":278,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Container Anomaly Use Case","description":"Container Anomaly Use Case"},"exports":{},"rawBody":"---\ntitle: Container Anomaly Use Case\ndescription: Container Anomaly Use Case\n---\n\nThis test case will test the use whereby a container suffers some anomaly. As a result, ContainerAnomaly events are sent to set the container for maintenance mode. A BPM process will take care of setting a container into inMaintenance mode, assigning a technician to repair the container and finally setting that container back to being empty and available. This test case will also ensure the order the container with the anomaly was carrying is marked spoilt. The following diagram depics roughly this path on a flow base fashion where the blue square rectangles, purple rounded rectangles and orange rectangles represent actions taken by the test case, events produced to the event backbone (either Kafka or IBM Event Streams) and object statuses respectively.\n\n![flow](container_anomaly_images/Slide1.png)\n\n## Tests\n\nThe following sequence diagrams represent each of the tests within this container anomaly integration test case.\n\n### Test 1 - Disable BPM\n\nThis test will make sure that when the application is deployed, the BPM anomaly service is enabled. However, it will then disable the BPM anomaly service in order to mockup the call and be able to carry on with this container anomaly test.\n\n![container anomaly](container_anomaly_images/Slide2.png)\n\n### Test 2 - Send Anomaly Events\n\nThis tests will send the ContainerAnomaly events needed to trigger the bpm call process and order spoilage.\n\n![container anomaly](container_anomaly_images/Slide3.png)\n\n### Test 3 - Container in MaintenanceNeeded Status\n\nThis test will make sure the container which ContainerAnomaly events have been sent for gets into MaintenanceNeeded status as a result.\n\n![maintenanceNeeded](container_anomaly_images/Slide4.png)\n\n### Test 4 - Order Spoilt\n\nThis test will make sure that the order the container which ContainerAnomaly events have been sent for was carrying gets into spoilt status as a result.\n\n![order spoilt](container_anomaly_images/Slide5.png)\n\n### Test 5 - Container To Maintenance\n\nThis test will call the toMaintenance API endpoint for setting a container into inMaintenance mode.\n\n![container toMaintenance](container_anomaly_images/Slide6.png)\n\n### Test 6 - Container InMaintenance Status\n\nThis test will make sure that the container that was set into inMaintenance mode in the previous test, is now indeed into inMaintenance mode.\n\n![container inMaintenance](container_anomaly_images/Slide7.png)\n\n### Test 7 - Container Off Maintenance\n\nThis test will set the container that was inMaintenance status off maintenance.\n\n![order assigned](container_anomaly_images/Slide8.png)\n\n### Test 8 - Container Empty Status\n\nThis test will make sure that the container that was set off maintenance mode in the previous test, is now indeed empty and available.\n\n![container empty](container_anomaly_images/Slide9.png)\n\n### Test 9 - Enable BPM\n\nThis test will make sure that the BPM anomaly service is enabled for the application to work as expected.\n\n![container anomaly](container_anomaly_images/Slide10.png)","fileAbsolutePath":"/home/runner/work/refarch-kc/refarch-kc/docs-gatsby/src/pages/itg-tests/containerAnomaly/containerAnomaly.mdx"}}}}