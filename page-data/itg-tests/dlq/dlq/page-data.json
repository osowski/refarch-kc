{"componentChunkName":"component---src-pages-itg-tests-dlq-dlq-mdx","path":"/itg-tests/dlq/dlq/","result":{"pageContext":{"frontmatter":{"title":"Dead Letter Queue test case","description":"Dead Letter Queue test case"},"relativePagePath":"/itg-tests/dlq/dlq.mdx","titleType":"append","MdxNode":{"id":"202abcdd-de45-53a5-96e1-176a7f601085","children":[],"parent":"72d6f638-4736-570b-aa01-ee54a91566e8","internal":{"content":"---\ntitle: Dead Letter Queue test case\ndescription: Dead Letter Queue test case\n---\n\nThis test case will test the scenario where the BPM service, which our reference application depends on, is not available. In such scenario, our application should be able to execute the [request retry or dead letter pattern](../../dlq/dlq.md) so that calls to the BPM service are retried, until certain threshold.\n\n![flow](images/Slide1.png)\n\n## Tests\n\nThe following sequence diagrams represent each of the tests within this container anomaly integration test case.\n\n### Test 1 - Create Container\n\nThis test will make sure that a new container, which we will then send ContainerAnomaly messages for, is created.\n\n![container anomaly](images/Slide2.png)\n\n### Test 2 - Send Anomaly Events\n\nThis tests will send the ContainerAnomaly events needed to trigger the bpm call process.\n\n![container anomaly](images/Slide3.png)\n\n### Test 3 - Container in MaintenanceNeeded Status\n\nThis test will make sure the container which ContainerAnomaly events have been sent for gets into MaintenanceNeeded status as a result.\n\n![maintenanceNeeded](images/Slide4.png)\n\n### Test 4 - Container Anomaly Retry\n\nThis test will make sure that our Spring Containers component sends ContainerAnomalyRetry events into the container-anomaly-retry topic in order to retry calls to the BPM service until a certain threshold (defaults to 3).\n\n![order spoilt](images/Slide5.png)\n\n### Test 5 - Container Anomaly Dead\n\nThis test will ensure that, after we have tried to call the BPM service a certain amount of times, a ContanerAnomalyDead event is sent into the container-anomaly-dead queue.\n\n![container toMaintenance](images/Slide6.png)","type":"Mdx","contentDigest":"ef694e8b23c854a0b9174dc3573a5cca","counter":292,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Dead Letter Queue test case","description":"Dead Letter Queue test case"},"exports":{},"rawBody":"---\ntitle: Dead Letter Queue test case\ndescription: Dead Letter Queue test case\n---\n\nThis test case will test the scenario where the BPM service, which our reference application depends on, is not available. In such scenario, our application should be able to execute the [request retry or dead letter pattern](../../dlq/dlq.md) so that calls to the BPM service are retried, until certain threshold.\n\n![flow](images/Slide1.png)\n\n## Tests\n\nThe following sequence diagrams represent each of the tests within this container anomaly integration test case.\n\n### Test 1 - Create Container\n\nThis test will make sure that a new container, which we will then send ContainerAnomaly messages for, is created.\n\n![container anomaly](images/Slide2.png)\n\n### Test 2 - Send Anomaly Events\n\nThis tests will send the ContainerAnomaly events needed to trigger the bpm call process.\n\n![container anomaly](images/Slide3.png)\n\n### Test 3 - Container in MaintenanceNeeded Status\n\nThis test will make sure the container which ContainerAnomaly events have been sent for gets into MaintenanceNeeded status as a result.\n\n![maintenanceNeeded](images/Slide4.png)\n\n### Test 4 - Container Anomaly Retry\n\nThis test will make sure that our Spring Containers component sends ContainerAnomalyRetry events into the container-anomaly-retry topic in order to retry calls to the BPM service until a certain threshold (defaults to 3).\n\n![order spoilt](images/Slide5.png)\n\n### Test 5 - Container Anomaly Dead\n\nThis test will ensure that, after we have tried to call the BPM service a certain amount of times, a ContanerAnomalyDead event is sent into the container-anomaly-dead queue.\n\n![container toMaintenance](images/Slide6.png)","fileAbsolutePath":"/home/runner/work/refarch-kc/refarch-kc/docs/src/pages/itg-tests/dlq/dlq.mdx"}}}}