{"componentChunkName":"component---src-pages-microservices-voyages-index-mdx","path":"/microservices/voyages/","result":{"pageContext":{"frontmatter":{"title":"Voyage Management","description":"Deployment of application microservices"},"relativePagePath":"/microservices/voyages/index.mdx","titleType":"append","MdxNode":{"id":"22215760-960e-542b-8b65-33ab9152586d","children":[],"parent":"387b3f22-3bda-52e2-8d9e-5aa8229b6679","internal":{"content":"---\ntitle: Voyage Management\ndescription: Deployment of application microservices\n---\n\n<InlineNotification kind=\"warning\">UNDER CONSTRUCTION</InlineNotification>\n\n<AnchorLinks>\n  <AnchorLink>Overview</AnchorLink>\n  <AnchorLink>Build</AnchorLink>\n  <AnchorLink>Run</AnchorLink>\n  <AnchorLink>Integration Tests</AnchorLink>\n  <AnchorLink>Implementation Details</AnchorLink>\n</AnchorLinks>\n\n### TBD\n\nTo be sourced from\n\n## Overview\n\n<PageDescription>\nThis service keeps track of each scheduled, current or completed voyage of container carreer vessels, being loaded with containers at a source port, sailing to a destination port and having onboard containers unloaded there.\n</PageDescription>\n\nThe source repository can be found at https://github.com/ibm-cloud-architecture/refarch-kc-ms/tree/master/voyages-ms.\n\n## User stories\nThis service keeps track of each of the container ships available for transporting containers. Each ship has a unique shipID. We limit the scope of a minimum viable product so the following user stories are implemented:\n\n* [x] The information about each ship is kept in a json file for a fleet. Ships are uniquely identified by their name (as shipID).\n* [x] The capacity of a ship is represented by a matrix, number of rows x number of columns to make it simpler. Therefore the total number of container is rows*columns.\n* [x] Support GPS lat/log position reports, as ship position event, of the position of the ship a different point in time. This is modeled as csv file with one row of (lat,log) pair, a row representing a time stamp. (1h?)\n* [ ] Generate ship event when leaving source port and when entering destination port, and when docked.\n* [ ] Define query of what happen to a ship from a given time to retrace its past voyages.\n\n## Build\n\nTBD Appsody\n\n## Run\n\nTBD Appsody\n\n## Integration Tests\n\nTBD Source from https://github.com/ibm-cloud-architecture/refarch-kc-ms/blob/master/docs/voyagesms.md\n\n## Implementation Details\n\nTBD Source from https://github.com/ibm-cloud-architecture/refarch-kc-ms/blob/master/docs/index.md\n","type":"Mdx","contentDigest":"368c66bb3ed149ed5bb92fb93d7e5dd8","counter":335,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Voyage Management","description":"Deployment of application microservices"},"exports":{},"rawBody":"---\ntitle: Voyage Management\ndescription: Deployment of application microservices\n---\n\n<InlineNotification kind=\"warning\">UNDER CONSTRUCTION</InlineNotification>\n\n<AnchorLinks>\n  <AnchorLink>Overview</AnchorLink>\n  <AnchorLink>Build</AnchorLink>\n  <AnchorLink>Run</AnchorLink>\n  <AnchorLink>Integration Tests</AnchorLink>\n  <AnchorLink>Implementation Details</AnchorLink>\n</AnchorLinks>\n\n### TBD\n\nTo be sourced from\n\n## Overview\n\n<PageDescription>\nThis service keeps track of each scheduled, current or completed voyage of container carreer vessels, being loaded with containers at a source port, sailing to a destination port and having onboard containers unloaded there.\n</PageDescription>\n\nThe source repository can be found at https://github.com/ibm-cloud-architecture/refarch-kc-ms/tree/master/voyages-ms.\n\n## User stories\nThis service keeps track of each of the container ships available for transporting containers. Each ship has a unique shipID. We limit the scope of a minimum viable product so the following user stories are implemented:\n\n* [x] The information about each ship is kept in a json file for a fleet. Ships are uniquely identified by their name (as shipID).\n* [x] The capacity of a ship is represented by a matrix, number of rows x number of columns to make it simpler. Therefore the total number of container is rows*columns.\n* [x] Support GPS lat/log position reports, as ship position event, of the position of the ship a different point in time. This is modeled as csv file with one row of (lat,log) pair, a row representing a time stamp. (1h?)\n* [ ] Generate ship event when leaving source port and when entering destination port, and when docked.\n* [ ] Define query of what happen to a ship from a given time to retrace its past voyages.\n\n## Build\n\nTBD Appsody\n\n## Run\n\nTBD Appsody\n\n## Integration Tests\n\nTBD Source from https://github.com/ibm-cloud-architecture/refarch-kc-ms/blob/master/docs/voyagesms.md\n\n## Implementation Details\n\nTBD Source from https://github.com/ibm-cloud-architecture/refarch-kc-ms/blob/master/docs/index.md\n","fileAbsolutePath":"/home/runner/work/refarch-kc/refarch-kc/docs/src/pages/microservices/voyages/index.mdx"}}}}