{"componentChunkName":"component---src-pages-business-scenario-quickstart-tutorial-index-mdx","path":"/business-scenario/quickstart-tutorial/","result":{"pageContext":{"frontmatter":{"title":"Quickstart Tutorial","description":"Simple end-to-end deployment scenario for the reference implementation"},"relativePagePath":"/business-scenario/quickstart-tutorial/index.mdx","titleType":"append","MdxNode":{"id":"059abd08-f88f-599a-acda-534852ddb9eb","children":[],"parent":"ab08b24b-f539-5be4-bcda-e9df1ca3160f","internal":{"content":"---\ntitle: Quickstart Tutorial\ndescription: Simple end-to-end deployment scenario for the reference implementation\n---\n\n<InlineNotification kind=\"warning\"><strong>TODO</strong> - UNDER CONSTRUCTION</InlineNotification>\n\nIn this tutorial, you will learn how to:\n\n- Create an order via the UI.\n- Check on existing orders.\n- View information about the Fleet.\n\nEach of these business processes will be executed step by step using the demonstration APIs and some scripts.\n\n## Pre-requisites\n\n- This quickstart tutorial assumes you have deployed the microservices as per the [local Kubernetes deployment](https://github.com/ibm-cloud-architecture/refarch-kc/tree/master/scripts/localk8s).\n\n\n## Step 1: Create an order\n\nOrders are created via the manufacturer. For a reminder of the different personas please see the [Scenario Overview](https://ibm-cloud-architecture.github.io/refarch-kc/business-scenario/scenario-overview/). \n\n* Navigate to http://localhost:3110 to access the UI home page:\n\n![kc-home](kc-home.png)\n\nTo log in to the home page, you will need the following user email and password:\n\n- Email: eddie@email.com\n- Password: Eddie\n\nThe initial UI homepage shows an illustrated version of the business process. There are five tiles that can be used to simulate different parts of the outlined business process. Tiles that are grey are not implemented at this time. \n\n* From the `Initiate Orders - Manufacturer` create a new 'fresh product' order to ship overseas. This simulates the activity that would usually be carried out by the manufacturer in our scenario.\n\nTo represent different manufacturers, the first select box has been designed to support multiple scenarios in the future. For the purposes of this quickstart tutorial, select 'GoodManuf'.\n\n![](kc-manuf-select.png)\n\nOnce the manufacturer is selected, a list of existing orders will be displayed. You can add an order through the UI, but you can also use a [script](https://github.com/ibm-cloud-architecture/refarch-kc-order-ms/blob/master/order-command-ms/scripts/createOrder.sh), which is available in the [order command microservice project](https://github.com/ibm-cloud-architecture/refarch-kc-order-ms).\n\nBelow is an example of how to use the createOrder script to add a 'GoodManuf's' order to book a voyage from Oakland to Shanghai for a fresh product:\n```\n./createOrder.sh localhost:10080 ./orderOacklandToChinaCreate.json\n\n```\n\n![](kc-orders.png)\n\n* Select one order using the `Arrow` icon. This will allow you to view the order details:\n\n![](kc-order.png)\n\nAs illustrated in the CQRS diagram:\n\nThe creation of the order goes to the [order command microservice](https://github.com/ibm-cloud-architecture/refarch-kc-order-ms/tree/master/order-command-ms) which publishes a `OrderCreated` event to the `orders` topic and then consumes it to persist the data to its database. See [source code here](https://github.com/ibm-cloud-architecture/refarch-kc-order-ms/blob/6de424c443c05262ae013620f5f11b4a1b2e6f90/order-command-ms/src/main/java/ibm/labs/kc/order/command/service/OrderCRUDService.java#L51-L74).\n\n\n* We can create a consumer to take messages from the 'orders topic' by running the following command:\n\n```bin/kafka-console-consumer.sh --bootstrap-server $BROKERS --topic orders --from-beginning```\n\nAfter running this, you should be able to see the following order with the status of `pending` and the type of event being `OrderCreated`.\n\n```json\n{\"payload\":{\n    \"orderID\":\"1fcccdf2-e29d-4b30-8e52-8116dc2a01ff\",\n    \"productID\":\"Carrot\",\n    \"customerID\":\"GoodManuf\",\n    \"quantity\":10000,\n    \"pickupAddress\": \"...\",\n    \"expectedDeliveryDate\":\"2019-03-31T13:30Z\",\n    \"status\":\"pending\"},\n\"type\":\"OrderCreated\",\n\"version\":\"1\"}\n\n```\n\n## Step 2: K Container Shipment Manager looking at Orders\n\n* From the home page, click on the Shipment Manager - Shipping Inc tile:\n\n![](shipment-inc.png)\n\nThe home page lists the order that the shipment company received in the previous step. \n\n![](kc-shipment-home.png)\n\nThe status of events will be modified over time while the order is processed down stream by the voyage and container services. The following sequence diagram illustrates the flow:\n\n![](kc-order-seq-diag.png)\n\nLooking at the events in the voyage service\n```\nvoyages_1     |  emitting {\"timestamp\":1548788544290,\"type\":\"OrderAssigned\",\"version\":\"1\",\"payload\":{\"voyageID\":100,\"orderID\":\"1fcccdf2-e29d-4b30-8e52-8116dc2a01ff\"}}\n```\n\nor on the `orders` topic:\n\n```json\n{\"timestamp\":1548792921679,\n\"type\":\"OrderAssigned\",\"version\":\"1\",\n\"payload\":{\"voyageID\":100,\"orderID\":\"1fcccdf2-e29d-4b30-8e52-8116dc2a01ff\"}}\n\n```\n\n## Step3: View Fleet information\n\nNote: *The term 'Blue Water' referred to here means at sea (including ports and coastal waters).*\n\n* From the home page, select the `Simulate Blue Water` tile. Select one of the available fleet. As of now, only the North Pacific has fleet data:\n\n![](kc-fleet-select.png)\n\nThe fleet panel lists the ships, their location and status and a map:\n\n![](kc-fleet-home.png)\n\n* Select one ship with the edit button. You will see the ship detail view:\n\n![](kc-ship-detail.png)\n\nThis view contains information about the ship itself, it's position at sea and the load. There is also an option to simulate a number of disaster scenarios that could play out at sea, however this functionality is not yet implemented. \n\nThere are currently three pre-defined scenarios, which will be implemented in the future:\n\n* Fire affecting some containers\n* Reefer down\n* Ship experiencing conditions that cause reefers to exceed desired temperature. \n\nThis quickstart guide will be updated as the project evolves and new capability is added. If you have any issues or queries with this quickstart guide, please [raise an issue](https://github.com/ibm-cloud-architecture/refarch-kc/issues) in the github repo. \n","type":"Mdx","contentDigest":"0721f7c58d93d7b42fc75ed16b8f7df0","counter":340,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Quickstart Tutorial","description":"Simple end-to-end deployment scenario for the reference implementation"},"exports":{},"rawBody":"---\ntitle: Quickstart Tutorial\ndescription: Simple end-to-end deployment scenario for the reference implementation\n---\n\n<InlineNotification kind=\"warning\"><strong>TODO</strong> - UNDER CONSTRUCTION</InlineNotification>\n\nIn this tutorial, you will learn how to:\n\n- Create an order via the UI.\n- Check on existing orders.\n- View information about the Fleet.\n\nEach of these business processes will be executed step by step using the demonstration APIs and some scripts.\n\n## Pre-requisites\n\n- This quickstart tutorial assumes you have deployed the microservices as per the [local Kubernetes deployment](https://github.com/ibm-cloud-architecture/refarch-kc/tree/master/scripts/localk8s).\n\n\n## Step 1: Create an order\n\nOrders are created via the manufacturer. For a reminder of the different personas please see the [Scenario Overview](https://ibm-cloud-architecture.github.io/refarch-kc/business-scenario/scenario-overview/). \n\n* Navigate to http://localhost:3110 to access the UI home page:\n\n![kc-home](kc-home.png)\n\nTo log in to the home page, you will need the following user email and password:\n\n- Email: eddie@email.com\n- Password: Eddie\n\nThe initial UI homepage shows an illustrated version of the business process. There are five tiles that can be used to simulate different parts of the outlined business process. Tiles that are grey are not implemented at this time. \n\n* From the `Initiate Orders - Manufacturer` create a new 'fresh product' order to ship overseas. This simulates the activity that would usually be carried out by the manufacturer in our scenario.\n\nTo represent different manufacturers, the first select box has been designed to support multiple scenarios in the future. For the purposes of this quickstart tutorial, select 'GoodManuf'.\n\n![](kc-manuf-select.png)\n\nOnce the manufacturer is selected, a list of existing orders will be displayed. You can add an order through the UI, but you can also use a [script](https://github.com/ibm-cloud-architecture/refarch-kc-order-ms/blob/master/order-command-ms/scripts/createOrder.sh), which is available in the [order command microservice project](https://github.com/ibm-cloud-architecture/refarch-kc-order-ms).\n\nBelow is an example of how to use the createOrder script to add a 'GoodManuf's' order to book a voyage from Oakland to Shanghai for a fresh product:\n```\n./createOrder.sh localhost:10080 ./orderOacklandToChinaCreate.json\n\n```\n\n![](kc-orders.png)\n\n* Select one order using the `Arrow` icon. This will allow you to view the order details:\n\n![](kc-order.png)\n\nAs illustrated in the CQRS diagram:\n\nThe creation of the order goes to the [order command microservice](https://github.com/ibm-cloud-architecture/refarch-kc-order-ms/tree/master/order-command-ms) which publishes a `OrderCreated` event to the `orders` topic and then consumes it to persist the data to its database. See [source code here](https://github.com/ibm-cloud-architecture/refarch-kc-order-ms/blob/6de424c443c05262ae013620f5f11b4a1b2e6f90/order-command-ms/src/main/java/ibm/labs/kc/order/command/service/OrderCRUDService.java#L51-L74).\n\n\n* We can create a consumer to take messages from the 'orders topic' by running the following command:\n\n```bin/kafka-console-consumer.sh --bootstrap-server $BROKERS --topic orders --from-beginning```\n\nAfter running this, you should be able to see the following order with the status of `pending` and the type of event being `OrderCreated`.\n\n```json\n{\"payload\":{\n    \"orderID\":\"1fcccdf2-e29d-4b30-8e52-8116dc2a01ff\",\n    \"productID\":\"Carrot\",\n    \"customerID\":\"GoodManuf\",\n    \"quantity\":10000,\n    \"pickupAddress\": \"...\",\n    \"expectedDeliveryDate\":\"2019-03-31T13:30Z\",\n    \"status\":\"pending\"},\n\"type\":\"OrderCreated\",\n\"version\":\"1\"}\n\n```\n\n## Step 2: K Container Shipment Manager looking at Orders\n\n* From the home page, click on the Shipment Manager - Shipping Inc tile:\n\n![](shipment-inc.png)\n\nThe home page lists the order that the shipment company received in the previous step. \n\n![](kc-shipment-home.png)\n\nThe status of events will be modified over time while the order is processed down stream by the voyage and container services. The following sequence diagram illustrates the flow:\n\n![](kc-order-seq-diag.png)\n\nLooking at the events in the voyage service\n```\nvoyages_1     |  emitting {\"timestamp\":1548788544290,\"type\":\"OrderAssigned\",\"version\":\"1\",\"payload\":{\"voyageID\":100,\"orderID\":\"1fcccdf2-e29d-4b30-8e52-8116dc2a01ff\"}}\n```\n\nor on the `orders` topic:\n\n```json\n{\"timestamp\":1548792921679,\n\"type\":\"OrderAssigned\",\"version\":\"1\",\n\"payload\":{\"voyageID\":100,\"orderID\":\"1fcccdf2-e29d-4b30-8e52-8116dc2a01ff\"}}\n\n```\n\n## Step3: View Fleet information\n\nNote: *The term 'Blue Water' referred to here means at sea (including ports and coastal waters).*\n\n* From the home page, select the `Simulate Blue Water` tile. Select one of the available fleet. As of now, only the North Pacific has fleet data:\n\n![](kc-fleet-select.png)\n\nThe fleet panel lists the ships, their location and status and a map:\n\n![](kc-fleet-home.png)\n\n* Select one ship with the edit button. You will see the ship detail view:\n\n![](kc-ship-detail.png)\n\nThis view contains information about the ship itself, it's position at sea and the load. There is also an option to simulate a number of disaster scenarios that could play out at sea, however this functionality is not yet implemented. \n\nThere are currently three pre-defined scenarios, which will be implemented in the future:\n\n* Fire affecting some containers\n* Reefer down\n* Ship experiencing conditions that cause reefers to exceed desired temperature. \n\nThis quickstart guide will be updated as the project evolves and new capability is added. If you have any issues or queries with this quickstart guide, please [raise an issue](https://github.com/ibm-cloud-architecture/refarch-kc/issues) in the github repo. \n","fileAbsolutePath":"/home/runner/work/refarch-kc/refarch-kc/docs/src/pages/business-scenario/quickstart-tutorial/index.mdx"}}}}